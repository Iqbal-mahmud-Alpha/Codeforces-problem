/**
                                        بِسْمِ اللهِ الرَّحْمٰنِ الرَّحِيْمِ
**/
#include <bits/stdc++.h>
using namespace std;
#define faster            ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff                first
#define ss                second
#define pb                push_back
#define pr                pair<int,int>
#define im                -1e18
#define mem(a,b)          memset(a,b,sizeof(a))
#define gcd(a, b)         __gcd(a, b)
#define lcm(a, b)         (a * (b / gcd(a, b)))
#define all(a)            a.begin(), a.end()
#define setbit(n)         __builtin_popcount(n);
#define totalbit(n)       log2(n)+1
#define oh                cout<<"Alpha valo sele"<<endl;

#define for0(a,n)         for(int i=a;i<n;i++)
#define for1(a,n)         for(int i=a;i<=n;i++)
#define rfor0(n, a)       for(int i=n-1; i>=a; i--)
#define rfor1(n, a)       for(int i=n; i>a; i--)

#define nl                endl
#define len(v)            v.size()
#define lena(a)           sizeof(a)/sizeof(a[0])
#define no                cout<<"NO"<<nl;
#define yes               cout<<"YES"<<nl;
#define posation(x)       cout<<fixed<<setprecision(x)
#define pi                3.141592653589793
#define INF               100000000000
#define mod               1000000007 //10^9+7;
#define num               3005

/**----data type----**/
typedef long long int ll;
typedef unsigned long long int llu;

/**---Graph move---**/
int dx[]= {-1, 0, 1,  0, -1, -1,  1, 1};
int dy[]= { 0, 1, 0, -1, -1,  1, -1, 1};
int kx[]= {-2,-1, 1, 2,  2,  1, -1, -2};
int ky[]= { 1, 2, 2, 1, -1, -2, -2, -1};

//map<int,int,greater<int>>m;
ll StringTolong(string s)
{
    int i=0,sum=0,l=len(s);
    while(l--)
    {
        sum=sum*10+(s[i]-48);
        i++;
    }
    return sum;
}

void solved()
{
    string s;
    cin>>s;
    vector<pr>v;
    v.pb({0,0});
    v.pb({2,5});
    v.pb({5,0});
    v.pb({7,5});
    int mx=0;
    for(int i=0; i<len(v); i++)
    {
        int x=v[i].ff;
        int y=v[i].ss;
        int first=-1,second=-1,flag=0;
        for(int j=len(s)-1; j>=0; j--)
        {
            if(s[j]-48==y)
            {
                second=j;
                flag=1;
                break;
            }
        }
        if(flag)
        {
            for(int j=second-1; j>=0; j--)
            {
                if(s[j]-48==x)
                {
                    first=j;
                    break;
                }
            }
        }
        int sum=0;
        if(first>=0 and second>=0)
        {
            sum=(first-0)+2;
            mx=max(mx,sum);
        }
        //cout<<sum<<' ';
    }
    cout<<len(s)-mx<<nl;
}

int main()
{
    ll tc;
    cin>>tc;
    //tc=1;
    while(tc--)
    {
        solved();
    }
}
/**

**/
