#include <bits/stdc++.h>
using namespace std;
#define faster            ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff                first
#define ss                second
#define pb                push_back
#define pr                pair<int,int>
#define mem(a,b)          memset(a,b,sizeof(a))
#define gcd(a, b)         __gcd(a, b)
#define lcm(a, b)         (a * (b / gcd(a, b)))
#define all(a)            a.begin(), a.end()
#define setbit(n)         __builtin_popcount(n);
#define totalbit(n)       log2(n)+1
#define lens(s)           s.size()
#define nl                endl
#define len(v)            v.size()
#define lena(a)           sizeof(a)/sizeof(a[0])
#define posation(x)       cout<<fixed<<setprecision(x)
#define pi                3.141592653589793
#define INF               1000000000
#define mod               1000000007 //10^9+7;
#define num               100005

/**----data type----**/
typedef long long int ll;
typedef unsigned long long int llu;

/**---Graph move---**/
int dx[]= {-1, 0, 1,  0, -1, -1,  1, 1};
int dy[]= { 0, 1, 0, -1, -1,  1, -1, 1};
int kx[]= {-2,-1, 1, 2,  2,  1, -1, -2};
int ky[]= { 1, 2, 2, 1, -1, -2, -2, -1};

void solved()
{
    int k,a,b;
    cin>>k>>a>>b;
    vector<int>v1(a);
    vector<int>v2(b);
    for(int i=0; i<a; i++)cin>>v1[i];
    for(int i=0; i<b; i++)cin>>v2[i];
    int zero=0,f=0,i=0,j=0;
    vector<int>ans;
    while(true)
    {
        if(i<len(v1) and k>=v1[i])
        {
            ans.pb(v1[i]);
            if(v1[i]==0)k++;
            i++;
        }
        else if(j<len(v2) and k>=v2[j])
        {
            if(v2[j]==0)k++;
            ans.pb(v2[j]);
            j++;
        }
        else break;

    }
    if(len(ans)<a+b)
    {
        cout<<-1<<nl;
    }
    else
    {
        for(int i=0; i<len(ans); i++)
        {
            cout<<ans[i]<<' ';
        }
        cout<<nl;
    }
}

int main()
{
    int tc;
    cin>>tc;
    while(tc--)
    {
        solved();
    }
}
