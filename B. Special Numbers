/**
                                        بِسْمِ اللهِ الرَّحْمٰنِ الرَّحِيْمِ
**/
#include <bits/stdc++.h>
using namespace std;
#define faster            ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff                first
#define ss                second
#define pb                push_back
#define pr                pair<int,int>
#define im                -1e18
#define mem(a,b)          memset(a,b,sizeof(a))
#define gcd(a, b)         __gcd(a, b)
#define lcm(a, b)         (a * (b / gcd(a, b)))
#define all(a)            a.begin(), a.end()
#define setbit(n)         __builtin_popcount(n);
#define totalbit(n)       log2(n)+1
#define oh                cout<<"Alpha valo sele"<<endl;

#define for0(a,n)         for(int i=a;i<n;i++)
#define for1(a,n)         for(int i=a;i<=n;i++)
#define rfor0(n, a)       for(int i=n-1; i>=a; i--)
#define rfor1(n, a)       for(int i=n; i>a; i--)

#define nl                endl
#define len(v)            v.size()
#define lena(a)           sizeof(a)/sizeof(a[0])
#define no                cout<<"NO"<<nl;
#define yes               cout<<"YES"<<nl;
#define posation(x)       cout<<fixed<<setprecision(x)
#define pi                3.141592653589793
#define INF               100000000000
#define mod               1000000007 //10^9+7;
#define num               300005

/**----data type----**/
typedef long long int ll;
typedef unsigned long long int llu;

/**---Graph move---**/
int dx[]= {-1, 0, 1,  0, -1, -1,  1, 1};
int dy[]= { 0, 1, 0, -1, -1,  1, -1, 1};
int kx[]= {-2,-1, 1, 2,  2,  1, -1, -2};
int ky[]= { 1, 2, 2, 1, -1, -2, -2, -1};

//map<int,int,greater<int>>m;

ll binarexponent(ll a,ll n)
{
    ll res=1;
    while(n)
    {
        if(n%2)
        {
            res=((res%mod)*(a%mod))%mod;
            n--;
        }
        else
        {
            a=((a%mod)*(a%mod))%mod;
            n/=2;
        }
    }
    return res;
}
string check(ll n)
{
    string s;
    while(n)
    {
        if(n%2==0)s+='0';
        else s+='1';
        n/=2;
    }
    //reverse(all(s));
    return s;
}
void solved()
{
    ll n,k;
    cin>>n>>k;
    int i=0;
    while(pow(2,i)<k)i++;
    //cout<<i<<nl;
    vector<ll>v;
    for(int j=0; j<=i; j++)
    {
        v.pb(binarexponent(n,j));
    }
//    for(int it:v){
//        cout<<it<<' ';
//    }
    //cout<<nl;
    string ss=check(k);
    ll sum=0;
    //cout<<ss<<nl;
    for(int j=0; j<len(ss); j++)
    {
        if(ss[j]=='1')
        {
            sum=((sum%mod)+(v[j]%mod))%mod;
        }
    }
    cout<<sum<<nl;
}

int main()
{
    ll tc;
    cin>>tc;
    //tc=1;
    while(tc--)
    {
        solved();
    }
}
/**
3
3 4
2 12
105 564

**/
