#include <bits/stdc++.h>
using namespace std;
#define faster            ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff                first
#define ss                second
#define pb                push_back
#define pr                pair<int,int>
#define mem(a,b)          memset(a,b,sizeof(a))
#define gcd(a, b)         __gcd(a, b)
#define lcm(a, b)         (a * (b / gcd(a, b)))
#define all(a)            a.begin(), a.end()
#define setbit(n)         __builtin_popcount(n);
#define totalbit(n)       log2(n)+1
#define lens(s)           s.size()
#define nl                endl
#define len(v)            v.size()
#define lena(a)           sizeof(a)/sizeof(a[0])
#define posation(x)       cout<<fixed<<setprecision(x)
#define pi                3.141592653589793
#define INF               1000000000
#define mod               1000000007 //10^9+7;
#define num               100005

/**----data type----**/
typedef long long int ll;
typedef unsigned long long int llu;

/**---Graph move---**/
int dx[]= {-1, 0, 1,  0, -1, -1,  1, 1};
int dy[]= { 0, 1, 0, -1, -1,  1, -1, 1};
int kx[]= {-2,-1, 1, 2,  2,  1, -1, -2};
int ky[]= { 1, 2, 2, 1, -1, -2, -2, -1};

void solved()
{
    int n,a;
    cin>>n;
    vector<int>neg;
    vector<int>pos;
    for(int i=0; i<n; i++)
    {
        cin>>a;
        if(a<0)neg.pb(a);
        else if(a>0)pos.pb(a);
    }
    if(len(neg)%2==1)
    {
        cout<<1<<' '<<neg[0]<<endl;
        cout<<len(neg)+len(pos)-1<<' ';
        for(int i=1; i<len(neg); i++)
        {
            cout<<neg[i]<<' ';
        }
        for(int i=0; i<len(pos); i++)
        {
            cout<<pos[i]<<' ';
        }
        cout<<nl;
        cout<<1<<' '<<0<<nl;
    }
    else
    {
        cout<<1<< ' '<<neg[0]<<nl;
        cout<<len(neg)+len(pos)-2<<' ';
        for(int i=2;i<len(neg);i++){
            cout<<neg[i]<<' ';
        }
        for(int i=0;i<len(pos);i++){
            cout<<pos[i]<<' ';
        }
        cout<<nl;
        cout<<2<<' '<<0<<' '<<neg[1]<<nl;
    }
}

int main()
{
    int tc=1;
    //cin>>tc;
    while(tc--)
    {
        solved();
    }
}
