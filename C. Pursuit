/**
                                        بِسْمِ اللهِ الرَّحْمٰنِ الرَّحِيْمِ
**/
#include <bits/stdc++.h>
using namespace std;
#define faster            ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff                first
#define ss                second
#define pb                push_back
#define pr                pair<int,int>
#define im                -1e18
#define mem(a,b)          memset(a,b,sizeof(a))
#define gcd(a, b)         __gcd(a, b)
#define lcm(a, b)         (a * (b / gcd(a, b)))
#define all(a)            a.begin(), a.end()
#define setbit(n)         __builtin_popcount(n);
#define totalbit(n)       log2(n)+1
#define oh                cout<<"Alpha valo sele"<<endl;

#define for0(a,n)         for(int i=a;i<n;i++)
#define for1(a,n)         for(int i=a;i<=n;i++)
#define rfor0(n, a)       for(int i=n-1; i>=a; i--)
#define rfor1(n, a)       for(int i=n; i>a; i--)

#define nl                endl
#define len(v)            v.size()
#define lena(a)           sizeof(a)/sizeof(a[0])
#define no                cout<<"NO"<<nl;
#define yes               cout<<"YES"<<nl;
#define posation(x)       cout<<fixed<<setprecision(x)
#define pi                3.141592653589793
#define INF               100000000000
#define mod               1000000007 //10^9+7;
#define num               100005

/**----data type----**/
typedef long long int ll;
typedef unsigned long long int llu;

/**---Graph move---**/
int dx[]= {-1, 0, 1,  0, -1, -1,  1, 1};
int dy[]= { 0, 1, 0, -1, -1,  1, -1, 1};
int kx[]= {-2,-1, 1, 2,  2,  1, -1, -2};
int ky[]= { 1, 2, 2, 1, -1, -2, -2, -1};


void solved()
{
    int n,m;
    cin>>n;
    int a[n+1],b[n+1];
    for(int i=1; i<=n; i++)
    {
        cin>>a[i];
    }
    for(int i=1; i<=n; i++)
    {
        cin>>b[i];
    }

    sort(a+1,a+n+1);
    sort(b+1,b+n+1);
    reverse(a+1,a+n+1);
    reverse(b+1,b+n+1);

    int pre[n+1],pre2[n+1];

    pre[1]=a[1],pre2[1]=b[1];
    for(int i=2; i<=n; i++)
    {
        pre[i]=pre[i-1]+a[i];
    }
    for(int i=2;i<=n;i++)
    {
        pre2[i]=pre2[i-1]+b[i];
    }

    int sum1=pre[n-(n/4)];
    int sum2=pre2[n-(n/4)];
    //cout<<sum1<<' '<<sum2<<nl;
    if(sum1>=sum2)
    {
        cout<<0<<nl;
        return;
    }
    int cnt=0,val=0,k,cool=n;
    while(sum1<sum2)
    {
        //cout<<sum1<<nl;
        n++,cnt++;
        k=n-(n/4);
        val+=100;
        sum1=val+pre[k-cnt];
        if(k<cool)
        {
            sum2=pre2[k];
        }
        else sum2=pre2[cool];
    }
    //cout<<sum1<<' '<<sum2<<nl;
    cout<<cnt<<nl;
}

int main()
{
    ll tc;
    cin>>tc;
    // tc=1;
    while(tc--)
    {
        solved();
    }
}
/**
5
1
100
0
1
0
100
4
20 30 40 50
100 100 100 100
4
10 20 30 40
100 100 100 100
7
7 59 62 52 27 31 55
33 35 50 98 83 80 64

**/
