#include <bits/stdc++.h>
using namespace std;
#define faster            ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff                first
#define ss                second
#define pb                push_back
#define pr                pair<int,int>
#define mem(a,b)          memset(a,b,sizeof(a))
#define gcd(a, b)         __gcd(a, b)
#define lcm(a, b)         (a * (b / gcd(a, b)))
#define all(a)            a.begin(), a.end()
#define setbit(n)         __builtin_popcount(n);
#define totalbit(n)       log2(n)+1
#define lens(s)           s.size()
#define lena(a)           sizeof(a)/sizeof(a[0])
#define posation(x)       cout<<fixed<<setprecision(x)
#define pi                3.141592653589793
#define INF               1000000000
#define mod               1000000007 //10^9+7;
#define num               100005

/**----data type----**/
typedef long long int ll;
typedef unsigned long long int llu;

/**---Graph move---**/
int dx[]= {-1, 0, 1,  0, -1, -1,  1, 1};
int dy[]= { 0, 1, 0, -1, -1,  1, -1, 1};
int kx[]= {-2,-1, 1, 2,  2,  1, -1, -2};
int ky[]= { 1, 2, 2, 1, -1, -2, -2, -1};
int tc,n;
char ch[201][201];
vector<pr>v;
void check(char a,char b)
{
    if(ch[n][n-1]=='0' and ch[n-1][n]=='0')
    {
        if(a=='0' and b=='0')
        {
            v.pb({n-1,n});
            v.pb({n,n-1});
        }
        else if(a=='0' and b=='1')
        {
            v.pb({2,1});
        }
        else if(a=='1' and b=='0')
        {
            v.pb({1,2});
        }
        else if(a=='1' and b=='1')
        {

        }
    }
    else if(ch[n][n-1]=='0' and ch[n-1][n]=='1')
    {
        if(a=='0' and b=='0')
        {
            v.pb({n,n-1});
        }
        else if(a=='0' and b=='1')
        {
            v.pb({1,2});
            v.pb({n,n-1});
        }
        else if(a=='1' and b=='0')
        {
            v.pb({2,1});
            v.pb({n,n-1});
        }
        else if(a=='1' and b=='1')
        {
            v.pb({n-1,n});
        }
    }
    else if(ch[n][n-1]=='1' and ch[n-1][n]=='0')
    {
        if(a=='0' and b=='0')
        {
            v.pb({n-1,n});
        }
        else if(a=='0' and b=='1')
        {
            v.pb({2,1});
            v.pb({n,n-1});
        }
        else if(a=='1' and b=='0')
        {
            v.pb({2,1});
            v.pb({n-1,n});
        }
        else if(a=='1' and b=='1')
        {
            v.pb({n,n-1});
        }
    }
    else if(ch[n][n-1]=='1' and ch[n-1][n]=='1')
    {
        if(a=='0' and b=='0'){

        }
        else if(a=='0' and b=='1'){
            v.pb({1,2});
        }
        else if(a=='1' and b=='0'){
            v.pb({2,1});
        }
        else if(a=='1' and b=='1'){
            v.pb({n,n-1});
            v.pb({n-1,n});
        }
    }
}
int main()
{

    cin>>tc;
    while(tc--)
    {
        cin>>n;
        for(int i=1; i<=n; i++)
        {
            for(int j=1; j<=n; j++)
            {
                cin>>ch[i][j];
            }
        }
        char x=ch[2][1];
        char y=ch[1][2];
        v.clear();
        check(x,y);
        cout<<v.size()<<endl;
        for(auto i:v){
            cout<<i.ff<<' '<<i.ss<<endl;
        }
    }
}
