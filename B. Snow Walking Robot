/**
                                        بِسْمِ اللهِ الرَّحْمٰنِ الرَّحِيْمِ
**/
#include <bits/stdc++.h>
using namespace std;
#define faster            ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff                first
#define ss                second
#define pb                push_back
#define pr                pair<int,int>
#define im                -1e18
#define mem(a,b)          memset(a,b,sizeof(a))
#define gcd(a, b)         __gcd(a, b)
#define lcm(a, b)         (a * (b / gcd(a, b)))
#define all(a)            a.begin(), a.end()
#define setbit(n)         __builtin_popcount(n);
#define totalbit(n)       log2(n)+1
#define oh                cout<<"Alpha valo sele"<<endl;

#define for0(a,n)         for(int i=a;i<n;i++)
#define for1(a,n)         for(int i=a;i<=n;i++)
#define rfor0(n, a)       for(int i=n-1; i>=a; i--)
#define rfor1(n, a)       for(int i=n; i>a; i--)

#define nl                endl
#define len(v)            v.size()
#define lena(a)           sizeof(a)/sizeof(a[0])
#define no                cout<<"NO"<<nl;
#define yes               cout<<"YES"<<nl;
#define posation(x)       cout<<fixed<<setprecision(x)
#define pi                3.141592653589793
#define INF               100000000000
#define mod               1000000007 //10^9+7;
#define num               300005

/**----data type----**/
typedef long long int ll;
typedef unsigned long long int llu;

/**---Graph move---**/
int dx[]= {-1, 0, 1,  0, -1, -1,  1, 1};
int dy[]= { 0, 1, 0, -1, -1,  1, -1, 1};
int kx[]= {-2,-1, 1, 2,  2,  1, -1, -2};
int ky[]= { 1, 2, 2, 1, -1, -2, -2, -1};

//map<int,int,greater<int>>m;
void Print(string s,int n)
{
    for(int i=0; i<n; i++)
    {
        cout<<s[i];
    }
}
void solved()
{
    string s;
    cin>>s;
    string a,b,c,d;
    for(int i=0; i<len(s); i++)
    {
        if(s[i]=='U')a+=s[i];
        else if(s[i]=='D')b+=s[i];
        else if(s[i]=='L')c+=s[i];
        else d+=s[i];
    }
    s=c+a+d+b;
    //cout<<s<<nl;
    if(len(a)!=0 and len(b)!=0 and len(c)!=0 and len(d)!=0)
    {
        int xx=min(len(a),min(len(b),min(len(c),len(d))));
        if(len(c)-xx==0 or len(d)-xx==0)
        {
            int yy=min(len(a),len(b));
            cout<<(xx*4)+(yy-xx)*2<<nl;
            Print(c,xx);
            Print(a,yy);
            Print(d,1);
            Print(b,1);
            Print(d,xx-1);
            Print(b,yy-1);
        }
        else if(len(a)-xx==0 or len(b)-xx==0)
        {
            int yy=min(len(c),len(d));
            cout<<(xx*4)+(yy-xx)*2<<nl;
            Print(c,yy);
            Print(a,1);
            Print(d,1);
            Print(a,xx-1);
            Print(d,yy-1);
            Print(b,xx);
        }
        cout<<nl;

    }
    else if((len(c)==0 or len(d)==0) and len(a)!=0 and len(b)!=0)
    {
        cout<<2<<nl;
        cout<<"UD"<<nl;
    }
    else if((len(a)==0 or len(b)==0) and len(c)!=0 and len(d)!=0)
    {
        cout<<2<<nl;
        cout<<"LR"<<nl;
    }
    else
    {
        cout<<0<<nl<<nl;
    }
}

int main()
{
    ll tc;
    cin>>tc;
    //tc=1;
    while(tc--)
    {
        solved();
    }
}
/**

**/
